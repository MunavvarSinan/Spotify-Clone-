{"version":3,"sources":["StateProvider.js","Footer.js","SidebarOption.js","Sidebar.js","Header.js","SongRow.js","Body.js","Player.js","spotify.js","Login.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Footer","className","src","alt","fontSize","Grid","container","spacing","item","xs","Slider","aria-labelledby","SidebarOption","title","Icon","Sidebar","playlists","console","log","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","playSong","onClick","id","album","artists","artist","join","Body","spotify","discover_weekly","dispatch","play","uris","then","res","getMyCurrentPlayingTrack","r","playing","description","context_uri","tracks","Player","accessUrl","Login","href","s","SpotifyWebApi","App","token","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getPlaylist","response","getMyTopArtists","top_artists","getMe","getUserPlaylists","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"waAEaA,EAAeC,0BAEfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OAC3B,cAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,GAAlD,SACGC,KAIQI,EAAgB,kBAAMC,qBAAWV,I,2KC0C/BW,MAvCf,WACI,OACI,sBAAKC,UAAU,SAAf,UACG,sBAAKA,UAAU,eAAf,UACI,qBACAA,UAAU,oBACVC,IAAI,GAAGC,IAAI,KACX,sBAAKF,UAAU,mBAAf,UACI,kDACA,0CAIR,sBAAKA,UAAU,iBAAf,UACI,cAAC,IAAD,CAAaA,UAAU,kBACvB,cAAC,IAAD,CAAkBA,UAAU,iBAC5B,cAAC,IAAD,CAAwBG,SAAS,QAAQH,UAAU,iBACnD,cAAE,IAAF,CAAyBA,UAAU,eAAgBG,SAAS,UAC5D,cAAC,IAAD,CAAeH,UAAU,iBAChC,cAAC,IAAD,CAAYA,UAAU,qBAEnB,qBAAKA,UAAU,gBAAf,SACA,eAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACD,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,IAAD,MAEF,cAACH,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,IAAD,MAEF,cAACH,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,SACE,cAACC,EAAA,EAAD,CAAQC,kBAAgB,iC,qBC/BrBC,MATf,YAA0C,IAAjBC,EAAgB,EAAhBA,MAAQC,EAAQ,EAARA,KAC/B,OACE,sBAAKb,UAAU,gBAAf,UACGa,GAAQ,cAACA,EAAD,CAAMb,UAAU,wBACxBa,EAAO,6BAAKD,IAAc,4BAAIA,Q,qDCyBtBE,MAxBf,WAAoB,IAAD,IACmBjB,IADnB,mBACNkB,EADM,KACNA,UAEX,OAHiB,KAEfC,QAAQC,IAAIF,GAEZ,sBAAKf,UAAU,UAAf,UACE,qBACEA,UAAU,gBACVC,IAAI,0EACJC,IAAI,KAEN,cAAC,EAAD,CAAeW,KAAMK,IAAUN,MAAM,SACrC,cAAC,EAAD,CAAeC,KAAMM,IAAYP,MAAM,WACvC,cAAC,EAAD,CAAeC,KAAMO,IAAkBR,MAAM,iBAC7C,uBACA,wBAAQZ,UAAU,iBAAlB,sBACA,uBAXF,OAaGe,QAbH,IAaGA,GAbH,UAaGA,EAAWM,aAbd,aAaG,EAAkBC,KAAI,SAACC,GAAD,OACrB,cAAC,EAAD,CAAeX,MAAOW,EAASC,c,yBCAxBC,MApBf,WAAmB,IAAD,IACa5B,IADb,mBACP6B,EADO,KACPA,KAET,OAHgB,KAId,sBAAK1B,UAAU,SAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,IACA,uBACE2B,YAAY,0CACZC,KAAK,YAGT,sBAAK5B,UAAU,gBAAf,UACE,cAAC6B,EAAA,EAAD,CAAQ5B,IAAG,OAAEyB,QAAF,IAAEA,GAAF,UAAEA,EAAMI,OAAO,UAAf,aAAE,EAAiBC,IAAK7B,IAAG,OAAEwB,QAAF,IAAEA,OAAF,EAAEA,EAAMM,eAC9C,oCAAKN,QAAL,IAAKA,OAAL,EAAKA,EAAMM,sB,OCDJC,MAhBf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAExB,OADAnB,QAAQC,IAAIiB,GAEV,sBAAKlC,UAAU,UAAUoC,QAAS,kBAAMD,EAASD,EAAMG,KAAvD,UACE,qBAAKrC,UAAU,iBAAiBC,IAAKiC,EAAMI,MAAMR,OAAO,GAAGC,IAAK7B,IAAI,KACpE,sBAAKF,UAAU,gBAAf,UACE,6BAAKkC,EAAMV,OACX,8BACGU,EAAMK,QAAQjB,KAAI,SAACkB,GAAD,OAAYA,EAAOhB,QAAMiB,KAAK,MADnD,KAC4D,IACzDP,EAAMI,MAAMd,e,sDCqERkB,MAxEf,YAA4B,IAAZC,EAAW,EAAXA,QAAW,EACe9C,IADf,mBAChB+C,EADgB,KAChBA,gBAAmBC,EADH,KAsBnBV,EAAW,SAACE,GAChBM,EACGG,KAAK,CACJC,KAAM,CAAC,iBAAD,OAAkBV,MAEzBW,MAAK,SAACC,GACLN,EAAQO,2BAA2BF,MAAK,SAACG,GACvCN,EAAS,CACPjB,KAAM,WACNrB,KAAM4C,EAAE5C,OAEVsC,EAAS,CACPjB,KAAM,cACNwB,SAAS,WAMnB,OACE,sBAAKpD,UAAU,OAAf,UACE,cAAC,EAAD,CAAQ2C,QAASA,IAEjB,sBAAK3C,UAAU,aAAf,UACE,qBAAKC,IAAG,OAAE2C,QAAF,IAAEA,OAAF,EAAEA,EAAiBd,OAAO,GAAGC,IAAK7B,IAAI,KAC9C,sBAAKF,UAAU,iBAAf,UACE,8CACA,iDACA,mCAAI4C,QAAJ,IAAIA,OAAJ,EAAIA,EAAiBS,oBAIzB,sBAAKrD,UAAU,cAAf,UACE,sBAAKA,UAAU,cAAf,UACE,cAAC,IAAD,CACEA,UAAU,gBACVoC,QAvDW,SAACC,GACpBM,EACGG,KAAK,CACJQ,YAAY,4CAEbN,MAAK,SAACC,GACLN,EAAQO,2BAA2BF,MAAK,SAACG,GACvCN,EAAS,CACPjB,KAAM,WACNrB,KAAM4C,EAAE5C,OAEVsC,EAAS,CACPjB,KAAM,cACNwB,SAAS,aA4CX,cAAC,IAAD,CAAcjD,SAAS,UACvB,cAAC,IAAD,OAPJ,OAUGyC,QAVH,IAUGA,OAVH,EAUGA,EAAiBW,OAAOlC,MAAMC,KAAI,SAACf,GAAD,OACjC,cAAC,EAAD,CAAS4B,SAAUA,EAAUD,MAAO3B,EAAK2B,kBCxDpCsB,MAZf,YAA8B,IAAZb,EAAW,EAAXA,QAChB,OACE,sBAAK3C,UAAU,SAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAM2C,QAASA,OAEjB,cAAC,EAAD,CAAQA,QAASA,QCYVc,EAAS,UAxBM,yCAwBN,sBAtBL,mCAsBK,yBArBF,yBAqBE,kBApBP,CACb,8BACA,4BACA,2BACA,gBACA,8BAeyGhB,KACzG,OADoB,yC,cCTPiB,MAZf,WACE,OACE,sBAAK1D,UAAU,QAAf,UACE,qBACEC,IAAI,0EACJC,IAAI,KAEN,mBAAGyD,KAAMF,EAAT,kCCHAG,GAAI,IAAIC,IA+DCC,OA7Df,WAAgB,IAAD,EACiBjE,IADjB,mBACJkE,EADI,KACJA,MAASlB,EADL,KAqDb,OAlDAmB,qBAAU,WAER,IAAMC,EFDDC,OAAOC,SAASF,KACpBG,UAAU,GACVC,MAAM,KACNC,QAAO,SAACC,EAAShE,GAChB,IAAIiE,EAAQjE,EAAK8D,MAAM,KAGvB,OAFAE,EAAQC,EAAM,IAAMC,mBAAmBD,EAAM,IAEtCD,IACN,IENHL,OAAOC,SAASF,KAAO,GACvB,IAAIS,EAAST,EAAKU,aAEdD,IACFd,GAAEgB,eAAeF,GAEjB7B,EAAS,CACPjB,KAAM,YACNmC,MAAOW,IAGTd,GAAEiB,YAAY,0BAA0B7B,MAAK,SAAC8B,GAAD,OAC3CjC,EAAS,CACPjB,KAAM,sBACNgB,gBAAiBkC,OAIrBlB,GAAEmB,kBAAkB/B,MAAK,SAAC8B,GAAD,OACvBjC,EAAS,CACPjB,KAAM,kBACNoD,YAAaF,OAIjBjC,EAAS,CACPjB,KAAM,cACNe,QAASiB,KAGXA,GAAEqB,QAAQjC,MAAK,SAACtB,GACdmB,EAAS,CACPjB,KAAM,WACNF,YAIJkC,GAAEsB,mBAAmBlC,MAAK,SAACjC,GACzB8B,EAAS,CACPjB,KAAM,gBACNb,oBAIL,CAACgD,EAAOlB,IAIT,sBAAK7C,UAAU,MAAf,WACI+D,GAAS,cAAC,EAAD,IACVA,GAAS,cAAC,EAAD,CAAQpB,QAASiB,SCtDbuB,QACa,cAA7BjB,OAAOC,SAASiB,UAEe,UAA7BlB,OAAOC,SAASiB,UAEhBlB,OAAOC,SAASiB,SAASC,MACvB,2D,YCmDO9F,I,OAvDC,SAAC+F,EAAOC,GAEtB,OADAvE,QAAQC,IAAIsE,GACJA,EAAO3D,MACb,IAAK,WACH,OAAO,6BACF0D,GADL,IAEE5D,KAAM6D,EAAO7D,OAGjB,IAAK,cACH,OAAO,6BACF4D,GADL,IAEElC,QAASmC,EAAOnC,UAGpB,IAAK,WACH,OAAO,6BACFkC,GADL,IAEE/E,KAAMgF,EAAOhF,OAGjB,IAAK,sBACH,OAAO,6BACF+E,GADL,IAEE1C,gBAAiB2C,EAAO3C,kBAG5B,IAAK,kBACH,OAAO,6BACF0C,GADL,IAEEN,YAAaO,EAAOP,cAGxB,IAAK,YACH,OAAO,6BACFM,GADL,IAEEvB,MAAOwB,EAAOxB,QAGlB,IAAK,cACH,OAAO,6BACFuB,GADL,IAEE3C,QAAS4C,EAAO5C,UAGpB,IAAK,gBACH,OAAO,6BACF2C,GADL,IAEEvE,UAAWwE,EAAOxE,YAEtB,QACE,OAAOuE,KCzDbE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAelG,aDRS,CAC1BkC,KAAM,KACNX,UAAW,GACX4B,QAAS,KACTC,gBAAiB,KACjBoC,YAAa,KACb5B,SAAS,EACT7C,KAAM,MCCuChB,QAASA,GAApD,SACE,cAAC,GAAD,QAGJoG,SAASC,eAAe,SFqHlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/C,MAAK,SAAAgD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnF,QAAQmF,MAAMA,EAAMC,c","file":"static/js/main.d1a261f8.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React from 'react'\r\nimport \"./Footer.css\"\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport { Grid, Slider } from \"@material-ui/core\";\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n           <div className=\"footer__left\">\r\n               <img\r\n               className=\"footer__albumLogo\" \r\n               src=\"\" alt=\"\"/>\r\n               <div className=\"footer__songInfo\">\r\n                   <h4>No Song Playing </h4>\r\n                   <p>...</p>\r\n               </div>\r\n\r\n           </div>\r\n           <div className=\"footer__center\">\r\n               <ShuffleIcon className=\"footer__green\" />\r\n               <SkipPreviousIcon className=\"footer__icon\" />\r\n               <PlayCircleOutlineIcon  fontSize=\"large\" className=\"footer__icon\"  />\r\n               < PauseCircleOutlineIcon className=\"footer__icon\"  fontSize=\"large\" />\r\n               <SkipNextIcon  className=\"footer__icon\" />\r\n        <RepeatIcon className=\"footer__green\" />\r\n           </div>\r\n           <div className=\"footer__right\">\r\n           <Grid container spacing={2}>\r\n          <Grid item>\r\n            <PlaylistPlayIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <VolumeDownIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider aria-labelledby=\"continuous-slider\" />\r\n          </Grid>\r\n        </Grid>\r\n               \r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ title , Icon }) {\r\n  return (\r\n    <div className=\"sidebarOption\">\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarOption from './SidebarOption'\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Sidebar() {\r\n    const [{ playlists }, dispatch] = useStateValue();\r\n    console.log(playlists);\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        className=\"sidebar__logo\"\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <SidebarOption Icon={HomeIcon} title=\"Home\" />\r\n      <SidebarOption Icon={SearchIcon} title=\"Search\" />\r\n      <SidebarOption Icon={LibraryMusicIcon} title=\"Your Library\" />\r\n      <br />\r\n      <strong className=\"sidebar__title\" >PLAYLIST</strong>\r\n      <hr />\r\n\r\n      {playlists?.items?.map((playlist) => (\r\n        <SidebarOption title={playlist.name} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Header() {\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <SearchIcon />\r\n        <input\r\n          placeholder=\"Search for Artists, Songs, or Podcasts \"\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n      <div className=\"header__right\">\r\n        <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\r\n        <h4>{user?.display_name}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./SongRow.css\";\r\n\r\nfunction SongRow({ track, playSong }) {\r\n  console.log(track);\r\n  return (\r\n    <div className=\"songRow\" onClick={() => playSong(track.id)}>\r\n      <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\r\n      <div className=\"songRow__info\">\r\n        <h1>{track.name}</h1>\r\n        <p>\r\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\r\n          {track.album.name}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongRow;\r\n","import React from \"react\";\r\nimport \"./Body.css\";\r\nimport Header from \"./Header\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport SongRow from \"./SongRow\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nfunction Body({ spotify }) {\r\n  const [{ discover_weekly }, dispatch] = useStateValue();\r\n\r\n  const playPlaylist = (id) => {\r\n    spotify\r\n      .play({\r\n        context_uri: `spotify:playlist:37i9dQZF1DWXJfnUiYjUKT`,\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  const playSong = (id) => {\r\n    spotify\r\n      .play({\r\n        uris: [`spotify:track:${id}`],\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <Header spotify={spotify} />\r\n\r\n      <div className=\"body__info\">\r\n        <img src={discover_weekly?.images[0].url} alt=\"\" />\r\n        <div className=\"body__infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>Discover Weekly</h2>\r\n          <p>{discover_weekly?.description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"body__songs\">\r\n        <div className=\"body__icons\">\r\n          <PlayCircleFilledIcon\r\n            className=\"body__shuffle\"\r\n            onClick={playPlaylist}\r\n          />\r\n          <FavoriteIcon fontSize=\"large\" />\r\n          <MoreHorizIcon />\r\n        </div>\r\n\r\n        {discover_weekly?.tracks.items.map((item) => (\r\n          <SongRow playSong={playSong} track={item.track} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport \"./Player.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Body from \"./Body\";\r\n\r\nfunction Player({ spotify }) {\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"player__body\">\r\n        <Sidebar />\r\n        <Body spotify={spotify} />\r\n      </div>\r\n      <Footer spotify={spotify} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/#\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n// Replace with your app's client ID, redirect URI and desired scopes\r\nconst clientId = \"cff76213089a4e228206c8bf120d67cb\";\r\nconst redirectUri = \"http://localhost:3000/\";\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromResponse = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce((initial, item) => {\r\n      var parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n      return initial;\r\n    }, {});\r\n};\r\n\r\nexport const accessUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { accessUrl } from \"./spotify\";\r\n\r\nfunction Login() {\r\n  return (\r\n    <div className=\"login\">\r\n      <img\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <a href={accessUrl}>LOGIN TO SPOTIFY</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useStateValue } from \"./StateProvider\";\nimport Player from \"./Player\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport \"./App.css\";\nimport Login from \"./Login\";\n\nconst s = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    // Set token\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      s.setAccessToken(_token);\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      s.getPlaylist(\"37i9dQZF1DWXJfnUiYjUKT\").then((response) =>\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n\n      s.getMyTopArtists().then((response) =>\n        dispatch({\n          type: \"SET_TOP_ARTISTS\",\n          top_artists: response,\n        })\n      );\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: s,\n      });\n\n      s.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n\n      s.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists,\n        });\n      });\n    }\n  }, [token, dispatch]);\n  \n\n  return (\n    <div className=\"app\">\n      {!token && <Login />}\n      {token && <Player spotify={s} />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","import { findAllByDisplayValue } from \"@testing-library/react\";\r\n\r\nexport const initialState = {\r\n  user: null,\r\n  playlists: [],\r\n  spotify: null,\r\n  discover_weekly: null,\r\n  top_artists: null,\r\n  playing: false,\r\n  item: null,\r\n  // token:\r\n  //  \"BQATUPyDeVGiKad7tHT-dVF2CzOtB4j0VDM3fNvlwdHJDI99um…wUgLH14Cl8PKgM5AWGP0y9ATR_lJUTARo3FXD2JAUPweyUL02\"\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n\r\n    case \"SET_PLAYING\":\r\n      return {\r\n        ...state,\r\n        playing: action.playing,\r\n      };\r\n\r\n    case \"SET_ITEM\":\r\n      return {\r\n        ...state,\r\n        item: action.item,\r\n      };\r\n\r\n    case \"SET_DISCOVER_WEEKLY\":\r\n      return {\r\n        ...state,\r\n        discover_weekly: action.discover_weekly,\r\n      };\r\n\r\n    case \"SET_TOP_ARTISTS\":\r\n      return {\r\n        ...state,\r\n        top_artists: action.top_artists,\r\n      };\r\n\r\n    case \"SET_TOKEN\":\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n\r\n    case \"SET_SPOTIFY\":\r\n      return {\r\n        ...state,\r\n        spotify: action.spotify,\r\n      };\r\n\r\n    case \"SET_PLAYLISTS\":\r\n      return {\r\n        ...state,\r\n        playlists: action.playlists,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}